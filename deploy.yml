version: "3.4"

services:

  sharedb:
    image: christasatzis/sharedb:latest
    environment:
    # Environmental variables
      - PORT=8112

      # docker services inspect
      - NODENAME={{.Node.Hostname}}
      - NODEID={{.Node.ID}}
      - SERVICEID={{.Service.ID}}
      - SERVICENAME={{.Service.Name}}
      - TASKID={{.Task.ID}}
      - TASKNAME={{.Task.Name}}
      - TASKREPID={{.Task.Slot}}
    command: npm start

    ports:
      - "8112:8112"

    networks:
      - editor_network

    deploy:
      mode: replicated
      replicas: 1
      placement:
#        max_replicas_per_node: 1
        constraints:
          - node.role == worker



  editor:
    image: christasatzis/codemirror:latest
    environment:
      # Environmental variables
      - PORT=8080
      - DBPORT=8112
      - DBHOST=83.212.77.11
      - IPFSHOST=ipfs
      - IPFSPORT1=5002
      - IPFSPORT2=9090

      # docker services inspect
      - NODENAME={{.Node.Hostname}}
      - NODEID={{.Node.ID}}
      - SERVICEID={{.Service.ID}}
      - SERVICENAME={{.Service.Name}}
      - TASKID={{.Task.ID}}
      - TASKNAME={{.Task.Name}}
      - TASKREPID={{.Task.Slot}}

    command: npm start
    ports:
      - "8080:8080"

    networks:
      - editor_network

    deploy:
      mode: replicated
      replicas: 2
      placement:
#        max_replicas_per_node: 1
        constraints:
          - node.role == worker

  ipfs:
    image: ipfs/js-ipfs:latest
    environment:
     # docker services inspect
     - NODENAME={{.Node.Hostname}}
     - NODEID={{.Node.ID}}
     - SERVICEID={{.Service.ID}}
     - SERVICENAME={{.Service.Name}}
     - TASKID={{.Task.ID}}
     - TASKNAME={{.Task.Name}}
     - TASKREPID={{.Task.Slot}}
    ports:
      - "5002"
      - "9090:9090"

    networks:
      - editor_network

    deploy:
      mode: replicated
      replicas: 2
      placement:
#        max_replicas_per_node: 1
        constraints:
          - node.role == worker

networks:
  editor_network: